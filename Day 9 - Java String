QUESTION :-

This exercise is to test your understanding of Java Strings. A sample String declaration:

String myString = "Hello World!"
The elements of a String are called characters. The number of characters in a String is called the length, and it can be retrieved with the String.length() method.

Given two strings of lowercase English letters,  and , perform the following operations:

Sum the lengths of  and .
Determine if  is lexicographically larger than  (i.e.: does  come before  in the dictionary?).
Capitalize the first letter in  and  and print them on a single line, separated by a space.
Input Format

The first line contains a string . The second line contains another string . The strings are comprised of only lowercase English letters.

Output Format

There are three lines of output:
For the first line, sum the lengths of  and .
For the second line, write Yes if  is lexicographically greater than  otherwise print No instead.
For the third line, capitalize the first letter in both  and  and print them on a single line, separated by a space.

SOLUTION :-

import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        
        Scanner sc=new Scanner(System.in);
        
        String A=sc.next();
        String B=sc.next();
        
        // We use print format and we sum the lengths of A and B for operation 1
        System.out.printf("%d \n", A.length() + B.length());
        
        // We use ternary operator and StringA.comparteTo(StringB) method to determine if A is lexicographically larger than B 
        System.out.println(A.compareTo(B) > 0 ? "Yes" : "No");
        
        // We use print format and a new method created below to capitalize the first letter in A and B and print them on a single line, separated by a space. 
        System.out.printf("%s %s \n", capitalize(A), capitalize(B));
    }
    
    // Method to capitalize
    public static String capitalize(String string){
        return string.substring(0, 1).toUpperCase() + string.substring(1);
    }
}
